name: Deploy FastAPI to Hetzner VPS

on:
  push:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create source archive
      run: |+
        tar -czvf source.tar.gz \
          src \
          pyproject.toml \
          uv.lock \
          Dockerfile \
          .dockerignore
          
    - name: Copy source to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "source.tar.gz"
        target: "/home/${{ secrets.VPS_USER }}/gzm-api/"
        overwrite: true

    - name: Deploy on VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          set -e
          cd /home/${{ secrets.VPS_USER }}/gzm-api
          tar -xzf source.tar.gz

          # Build the image
          docker build -t gzm-api:latest .

          # Stop and remove existing container
          docker stop gzm-api || true
          docker rm gzm-api || true

          # Run with Traefik labels and networks
          docker run -d \
            --name gzm-api \
            --env-file .env \
            --restart unless-stopped \
            --network web \
            --network app-network \
            -v /home/${{ secrets.VPS_USER }}/gzm-api/research.db:/app/research.db \
            gzm-api:latest`

          # Cleanup
          rm -f source.tar.gz
          docker image prune -f --filter "dangling=true"

          # Status check
          docker ps --filter "name=gzm-api" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

          # Health check
          sleep 10
          docker exec gzm-api curl -f http://localhost:8001/health || echo "Health check failed"
